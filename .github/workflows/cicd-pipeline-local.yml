name: CICD Pipeline (Local)

#
# This is a repository specific local workflow - only the template is auto-generated
#

#
# Start of Template (part 1)
#
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

env:
  SLACK_NOTIFY: true

jobs:
#
# End of Template (part 1)
#
  get-python-versions:
    name: Get Python Versions
    runs-on: ubuntu-latest
    outputs:
      python-matrix: ${{ steps.get-python-versions-action.outputs.latest-python-versions }}
    steps:
      - uses: snok/latest-python-versions@v1
        id: get-python-versions-action
        with:
          min-version: 3.7
          include-prereleases: false

  bandit:
    name: Bandit
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Bandit
        env:
          EXCLUDE_FILES: '\.md$'
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/bandit/master/pipeline.sh)

  pydocstyle:
    name: Pydocstyle
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Pydocstyle
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pydocstyle/master/pipeline.sh)

  pycodestyle:
    name: Pycodestyle
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Pycodestyle
        env:
          EXCLUDE_FILES: '\.md$'
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pycodestyle/master/pipeline.sh)

  pylama:
    name: Pylama
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Pylama
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pylama/master/pipeline.sh)

  pylint:
    name: Pylint
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run Pylint
        env:
          EXCLUDE_FILES: '\.md$,setup.py'
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/pylint/master/pipeline.sh)

#
# Start of Template (part 2)
#

  slack-workflow-status:
    if: always()
    name: Slack Post Workflow Notification
    needs:
      - bandit
      - pydocstyle
      - pycodestyle
      - pylint
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notifications
        if: ${{ env.SLACK_NOTIFY == 'true' && github.event_name == 'push' }}
        uses: Gamesight/slack-workflow-status@v1.1.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          include_jobs: on-failure
          include_commit_message: true
#
# End of Template (part 2)
#
